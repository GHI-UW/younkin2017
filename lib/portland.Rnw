
\begin{figure}\label{travelTime}
<<portland2, echo = FALSE, eval = TRUE, results = "hide", warning = FALSE, message = FALSE, fig.height = 3>>=
p <- ITHIM:::compareDistributions(ITHIM.baseline, ITHIM.scenario, type = "WalkingTime")
p + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlim(1,1e3) + scale_x_continuous(trans='log10') + xlab("Walking Time (min/week)")
@
<<portland3, echo = FALSE, eval = TRUE, results = "hide", warning = FALSE, message = FALSE, fig.height = 3>>=
p <- ITHIM:::compareDistributions(ITHIM.baseline, ITHIM.scenario, type = "CyclingTime")
p + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlim(1,1e2) + scale_x_continuous(trans='log10') + xlab("Cycling Time (min/week)")
@
\caption{Distributions of walking and cycling transport time for
  baseline and scenario models, stratified by age and sex.  In this
  example the scenario was created by doubling the overall walking and
  cycling means.}
\end{figure}

\begin{figure}\label{portland1}
<<portland5, echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, fig.height = 3>>=
results <- data.frame()
ITHIM.portland <- ITHIM.baseline
for( muNonTravel in seq(1,25, length.out = 5)){
    ITHIM.baseline <- update(ITHIM.baseline, list(muNonTravel = muNonTravel))
    ITHIM.scenario <- update(ITHIM.scenario, list(muNonTravel = muNonTravel))
    foo <- ITHIM:::summarizeBurden(ITHIM.baseline, ITHIM.scenario)
    results <- rbind(results, c(muNonTravel, foo))
}
names(results) <- c("muNonTravel",names(foo))
p <- results %>% gather(.,disease,"rho",2:7) %>% ggplot(., aes(x = muNonTravel, y = rho))
p + geom_line(aes(x=muNonTravel, y = rho*100, colour = disease)) + geom_vline(xintercept = c(ITHIM.portland@parameters@muNonTravel,c(500,1000)/60), linetype = c(1,2,2)) + xlab("Non-travel Physical Activity (MET-hrs./week)") + ylab("Percent Reduction of Deaths") + theme_bw()
@
\caption{The two vertical lines mark the interval for ``medium
  activity`` defined by the U.S. Office of Disease Prevention and Health
  Promotion.  Medium activity is 150 minutes to 300 (5 hours) minutes
  of moderate-intensity activity a week (or 75 to 150 minutes of
  vigorous-intensity physical activity a week). In scientific terms,
  this range is approximately equivalent to 500 to 1,000 metabolic
  equivalent (MET) minutes a week.}
\end{figure}


\begin{figure}\label{portland6}
<<portland6, echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, fig.height = 3>>=
msaID.portland <- "6442"
p <- NHTS.df %>% filter(location == msaID.portland) %>% group_by(age,sex) %>% summarize(n.individuals = n_distinct(id)) %>% as.data.frame() %>% ggplot(.,aes(x=age,y=n.individuals, fill = sex))
p + geom_bar(stat = "identity", position = "dodge") + theme_bw()
@
\caption{Foo}
\end{figure}

\begin{figure}\label{portland7}
<<portland7, echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, fig.height = 3>>=
D <- NHTS.df %>% filter(location == msaID.portland) %>% group_by(mode,age,sex) %>% summarise(n.trips = n()) %>% ungroup() %>% complete(age,sex,mode)  %>% arrange(sex,age) %>% filter(!is.na(mode)) %>% as.data.frame()
p <- ggplot(D, aes(x = age, y = n.trips, fill = mode))
p + geom_bar(stat = "identity", postion = "dodge") + facet_grid( . ~ sex ) + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
@
\caption{Foo}
\end{figure}

\begin{figure}\label{portland8}
<<portland8, echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, fig.height = 3>>=
sampleSize <- NHTS.df %>% filter(!(location %in% c("-1","XXXX"))) %>% group_by(sex,age) %>% summarise(n=n_distinct(id))
tripDuration <- NHTS.df %>% filter(!(location %in% c("-1","XXXX"))) %>% group_by(mode,sex,age) %>% summarise(total=sum(duration))
foo <- right_join(sampleSize,tripDuration, by = c("sex","age")) %>% ungroup() %>% mutate(mean = total/n*7) %>% select(mode,sex,age,mean) %>% complete(mode,sex,age)
meanByMode <- split(foo,foo$mode)

D <- melt(meanByMode) %>% select(mode,sex,age,value)
p <- ggplot(D, aes(x = age, y = value, fill = mode))
p + geom_bar(stat = "identity", postion = "dodge") + facet_grid( . ~ sex ) + ylab("Mean Weekly Travel Time (minutes)") + theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
@
\end{figure}

\begin{figure}
<<mandm222, echo = FALSE, eval = TRUE, results = "hide", warning = FALSE, message = FALSE, fig.height = 3>>=
n.ind <- NHTS.df  %>% filter(location == 6442) %>% group_by(sex,age) %>% summarise(n.ind = n_distinct(id))

n.AT <- NHTS.df %>% filter(location == 6442) %>% group_by(sex,age,id, mode) %>% summarise(durationTotal = sum(duration)) %>% ungroup() %>% group_by(sex,age) %>% filter(mode %in% c("walk","cycle")) %>% filter(durationTotal > 0) %>% summarise(n.AT = n_distinct(id))

D <- inner_join(n.ind, n.AT, by = c("sex","age")) %>% mutate(p0 = 1-n.AT/n.ind)
ggplot(D, aes(x=age,y=p0, fill = sex)) + geom_bar(stat = "identity", position = "dodge") + theme_bw()+ ylab("Proportion of Inactive Travelers") + xlab("") + coord_cartesian(ylim = c(0.5, 1))
p.AT.portland <- D %>% ungroup() %>% filter(age == "45-59" & sex == "M") %>% select(p0) %>% as.numeric()
@
\caption{The proportion of inactive travelers in the Portland metropolitan area.}
\end{figure}

\begin{figure}
<<mandm223, echo = FALSE, eval = TRUE, results = "hide", warning = FALSE, message = FALSE, fig.height = 3>>=
AT.id.vec <- NHTS.df %>% filter(location == 6442 ) %>% group_by(sex, age, id, mode) %>% summarise(durationTotal = sum(duration)) %>% ungroup() %>% filter(mode %in% c("walk","cycle")) %>% filter(durationTotal > 0) %>% select(id) %>% unlist()
D <- NHTS.df %>% filter(id %in% AT.id.vec) %>% group_by(sex, age, id) %>% summarise(totalDuration = alpha.AT*sum(duration)*7/60)

summaryStats <- D %>% summarise(mean = mean(totalDuration), sd=sd(totalDuration))

D <- D %>% filter(age == "45-59" && sex == "M")
summaryStats <- summaryStats %>% filter(age == "45-59" & sex == "M")

ggplot(D,aes(totalDuration)) + geom_histogram(aes(y=..density..), bins = 10, alpha = 0.2 ) +
    geom_line(aes(y = ..density.., color = "Empirical"), stat = 'density') +
    theme_bw() + xlab("Travel Activity Met-hrs./week") + xlim(c(0,240)) +
    stat_function(aes(color="Fitted"), fun = dlnorm,
                  args = list(meanlog = with(summaryStats,log(mean/sqrt(1+sd^2/mean^2))),
                              sdlog = with(summaryStats,sqrt(log(1+sd^2/mean^2)))))

@
\caption{Histogram of travel activity among male active travelers
  between the age of 45 and 59 living in the Portland metropolitan area.
  Overlayed are both the empirical and fitted densities.  We assume
  that within age and sex class, and among active travelers, travel
  activity has a log-normal distribution.}
\end{figure}

<<mandm2223, echo = FALSE, eval = TRUE, results = "hide", warning = FALSE, message = FALSE, fig.height = 3>>=
D <- NHTS.df %>% filter(id %in% AT.id.vec) %>% group_by(id, sex, age) %>% summarise(totalDuration = alpha.AT*sum(duration)*7/60) %>% ungroup() %>% group_by(age,sex) %>% summarise(mean = mean(totalDuration), sd=sd(totalDuration))
@

\begin{figure}
<<mandm23, echo = FALSE, eval = TRUE, results = "hide", warning = FALSE, message = FALSE, fig.height = 3>>=

getQuantilesMixture <- function(p.AT, mean, sd){

meanlog <- log(mean/sqrt(1+sd^2/mean^2))
sdlog <- sqrt(log(1+sd^2/mean^2))

t.vec <- c()

for( i in 1:1e4){
    if( runif(1) > p.AT ){
        t <- 0
        }else{
            t <- rlnorm(1,meanlog = meanlog, sdlog = sdlog)
            }
    t.vec <- c(t.vec,t)
    }

n <- 1e3
prob <- seq(0,1,length.out=n)
quantiles <- quantile(t.vec, prob = prob)
D <- data.frame(quantiles = quantiles, prob = prob)
return(D)

}

D <- getQuantilesMixture(p.AT = p.AT.portland, mean = summaryStats$mean, sd = summaryStats$sd)

ggplot(D, aes(x=quantiles, y = prob)) + geom_point(aes(x=quantiles,y=prob)) + geom_line(aes(x=quantiles,y=prob)) + coord_cartesian(ylim = c(1-p.AT.portland,1), xlim = c(0,200)) + theme_bw() + xlab("Travel Activity (MET-hrs./week)") + ylab("Cumulative Distribution")
@
\caption{The cumulative distribution function for men between the age
  of 45 and 59 living in the Portland metropolitan area.}
\end{figure}

\begin{figure}
<<portland9, echo = FALSE, eval = TRUE, results = "hide", warning = FALSE, message = FALSE, fig.height = 3>>=

computeAF <- function(pAT.baseline, pAT.scenario, mean.baseline, mean.scenario, sd.baseline, sd.scenario, alpha, k){
    D.baseline <- getQuantilesMixture(p.AT = pAT.baseline, mean = mean.baseline, sd = sd.baseline)
    RR.baseline <- getRR(D.baseline$quantiles, alpha = alpha, k = k)
    D.scenario <- getQuantilesMixture(p.AT = pAT.scenario, mean = mean.scenario, sd = sd.scenario)
    RR.scenario <- getRR(D.scenario$quantiles, alpha = alpha, k = k)
    AF <- 1 - sum(RR.scenario)/sum(RR.baseline)
    return(AF)
}

pAT.scenario.vec <- seq(0.6,1,length.out = 1e2)
AF.vec <- c()
for( pAT.scenario in pAT.scenario.vec ){
    AF <- computeAF(pAT.baseline = 0.6, pAT.scenario = pAT.scenario, mean.baseline = mean <- summaryStats$mean, mean.scenario = mean, sd.baseline = sd <- summaryStats$sd, sd.scenario = sd, alpha = alpha.cvd, k = 1/2)
    AF.vec <- c(AF.vec, AF)
}
plot(pAT.scenario.vec,AF.vec)
@

\end{figure}
